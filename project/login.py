# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import subprocess
import mysql.connector
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(937, 762)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.usernamelabel = QtWidgets.QLabel(self.centralwidget)

        self.MainWindow = MainWindow
        
        self.usernamelabel.setGeometry(QtCore.QRect(590, 190, 141, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.usernamelabel.setFont(font)
        self.usernamelabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.usernamelabel.setObjectName("usernamelabel")
        self.Passwordlabel = QtWidgets.QLabel(self.centralwidget)
        self.Passwordlabel.setGeometry(QtCore.QRect(590, 250, 121, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Passwordlabel.setFont(font)
        self.Passwordlabel.setObjectName("Passwordlabel")
        self.Usernamelabel = QtWidgets.QLineEdit(self.centralwidget)
        self.Usernamelabel.setGeometry(QtCore.QRect(780, 190, 113, 22))
        self.Usernamelabel.setObjectName("Usernamelabel")
        self.passwordlabel = QtWidgets.QLineEdit(self.centralwidget)
        self.passwordlabel.setGeometry(QtCore.QRect(780, 250, 113, 22))
        self.passwordlabel.setObjectName("passwordlabel")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(710, 330, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.signup = QtWidgets.QPushButton(self.centralwidget)
        self.signup.setGeometry(QtCore.QRect(710, 390, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.signup.setFont(font)
        self.signup.setObjectName("signup")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, -20, 551, 791))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("D:/project/login.jpg"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 937, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        #button connection
        self.pushButton.clicked.connect(self.login_attempt)
        self.signup.clicked.connect(self.signupp)

        self.conn = mysql.connector.connect(
            host='localhost',
            user='root',
            password='Aaravm123!',
            database='pro'  
        )
        self.cursor = self.conn.cursor()
        print('Connection established')

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Login"))
        self.usernamelabel.setText(_translate("MainWindow", "Enter Username"))
        self.Passwordlabel.setText(_translate("MainWindow", "Enter Password"))
        self.pushButton.setText(_translate("MainWindow", "Login"))
        self.signup.setText(_translate("MainWindow", "Sign Up"))



    # to open new window when user is u
    def open_not_shopkeeper_window(self):
        try:
            subprocess.Popen([sys.executable, 'not_shopkeeper.py'])
            self.close_main_window()
        except Exception as e:
            print("Error:", e)

    '''def close_main_window(self):
        self.MainWindow.close()
        sys.exit()'''

    def open_signup_window(self):
        try:
            subprocess.Popen([sys.executable, 'signup.py'])
            self.close_main_window()
        except Exception as e:
            print("Error:", e)

    # to open new window when user is s
    def open_shopkeeper_window(self):
        try:
            subprocess.Popen([sys.executable, 'shopkeeper.py'])
            self.close_main_window()
        except Exception as e:
            print("Error:", e)

    def close_main_window(self):
        self.MainWindow.close()
        sys.exit()
        

    #function for login button
    def login_attempt(self):
        entered_username = self.Usernamelabel.text()
        entered_password = self.passwordlabel.text()    

        print("Entered Username:", entered_username)
        print("Entered Password:", entered_password)
        try:
            self.cursor.execute("SELECT * FROM login WHERE username=%s AND user_password=%s", (entered_username, entered_password))
            result = self.cursor.fetchone()
            print('Query executed')
        except mysql.connector.Error as e:
            print("Error:", e)
            
        if result:#if the data exists
            print("Yes, the data exists")
            user_type = result[3]  # usertype is in the fourth column of the login table
            print("User Type:", user_type)

            if user_type == 'u':
                self.open_not_shopkeeper_window()
            elif user_type =='s':
                self.open_shopkeeper_window()
            else:
                print("Invalid usertype")
        else:
            print("Invalid username or password")

    #function for signup
    def signupp(self):
        self.open_signup_window()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
